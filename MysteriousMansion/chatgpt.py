import google.generativeai as palm
import os

palm.configure(api_key='AIzaSyDWzaydtIGkbeva7jEqcZtPGqM5YecJWis')
response = palm.chat(messages=["write me a short story for a basic text based game with every action leading to a choice which will either be correct or incorrect and every incorrect choice leads to game ending. Make sure your answer is long enough to complete the story with last action action being victory. You need to make it big enough for exactly 7 different actions as the story progress and also make the first choice as introduction to the game while having 2 options to chose from just like every other action of any correct option. Make sure that you have covered all explored all the choices and that exactly two choices are there not more and make sure that the correct choice are mentioned using a number index while the wrong choices are mentioned"
                               + "using a number index with a 'f' character to distinguish them from the correct choice of the same action do it such that every action has 2 options and no such thing as choice but for every action prompt there are 2 options to select from and as every action is marked with an option you need to mark the 2 choices of that options with that number for correct choice or that number and a character 'f' for incorrect option also give me the endings for all the incorrect choices like '1f' or '2f', make sure all the actions have the choices in the same action and no intermediate action is needed like after action 2 we can have the choices in the same prompt so that next 2 prompts can be of 2 options of that actions do every action."
                               + "Make sure that the 2nd option is not always the incorrect option but it should be mixed to make game non predictable. Also make sure that the choices shouldn't be too vague and the player should be able to make prediction about the correct choice based on the context. The story should have identifying choices for every action. Make sure to have exactly 7 different actions and a last one that is for victory. Also store your response in form of a python dictionary with keys of datatype string with keys being the no of that option like: '1', '1f', '2','2f' and the values corresponding to the key being the description of that action or choice. Please name the dictionary as Choices. Also store an identifying keyword from the description"
                               + "like:'left' for correct and 'right' for incorrect or something like that for all the correct choices in a form of python list in string datatype and name of the list should be 'correct'. Also do the same for all incorrect choices but the name of that different list should be 'incorrect'. Also for 'incorrect' list you don't need to add the character 'f' to the end of all the words. choices should be identified by a word from the context of the story and desription. example: if the choice is between 'red' cup and 'blue' cup and 'red' is the correct choice based on the context then 'red' should be stored in the 'correct' list while the other choice 'blue' should be stored in the 'incorrect' list. READ THE PROMPT VERY CAREFULLY AND FULFILL ALL THE REQUIREMENTS COMPLETELY"
                               + "Make sure that all the Keys of the dictionary have datatype string... AND ALSO END YOUR ANSWER AFTER GENERATING THE CORRECT AND INCORRECT LIST..."
                               + " A reminder : Also store your response in form of a python dictionary with keys of datatype string with keys being the no of that option like: '1', '1f', '2','2f' and the values corresponding to the key being the description of that action or choice. Please name the dictionary as Choices. Also store an identifying keyword from the description like:'left' for correct and 'right' for incorrect or something like that for all the correct choices in a form of python list in string datatype and name of the list should be 'correct'. Also do the same for all incorrect choices but the name of that different list should be 'incorrect'. Also for 'incorrect' list you don't need to add the character 'f' to the end of all the words."
                               + "NOTE: MAKE SURE THAT THE USER DOESN'T HAVE TO MAKE A GUESS ABOUT THE CHOICES. MAKE SURE THAT ALL OF HIS OPTIONS ARE GIVEN IN THE CHOICE. MAKE SURE ALL ACTIONS HAVE A CHOICE AT THE END AND ALSO THAT ALL ACTIONS END WITH A QUESTION FOR USER TO CHOSE FROM THE NEXT CHOICE."
                               + "VERY VERY IMPORTANT NOTE: MAKE SURE ALL ACTIONS HAVE A CHOICE AT THE END AND ALSO THAT ALL ACTIONS END WITH A QUESTION FOR USER TO CHOSE FROM THE NEXT CHOICE."
                               + "MAKE THE KEY OF THOSE DICTIONARY IN STRING DATATYPE."
                               + "FOR AN EXAMPLE: THIS IS WHAT IT SHOULD LOOK LIKE: MAKE YOU OWN LIKE THIS "
                               + "Choices = {"
                               + "'1' : This is a basic text-based game called The Mysterious Mansion, You find yourself standing in front of a grand mansion. The door creaks open invitingly. Do you enter? (Type yes or no),"
                               + "'1f' : The mysterious mansion remains a tantalizing mystery, and you decide to turn back and leave. As you walk away, you can't help but wonder about the secrets that lie within.,"
                               + "'End' : How could you fail the captain like this?.}"
                               + "correct = ['yes', 'blue', ... ] # Make sure that all the actions are covered so there should be 7 elements in both 'correct' and 'incorrect' lists"
                               + "incorrect = ['no', 'red', ... ]"
                               ])
incorrectIndex = (response.messages[1]['content'].index('incorrect'))
finalIndex = 0
for i in range(incorrectIndex, incorrectIndex + 100):
    if (response.messages[1]['content'][i] == ']'):
        finalIndex = i
exec(response.messages[1]['content'][0:finalIndex+1])
